// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.20.3
// source: protos/edge/data/position.proto

package data

import (
	gopb "github.com/xefino/protobuf-gen-go/gopb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Type describes the position type
type Position_Type int32

const (
	Position_Buy  Position_Type = 0
	Position_Sell Position_Type = 1
)

// Enum value maps for Position_Type.
var (
	Position_Type_name = map[int32]string{
		0: "Buy",
		1: "Sell",
	}
	Position_Type_value = map[string]int32{
		"Buy":  0,
		"Sell": 1,
	}
)

func (x Position_Type) Enum() *Position_Type {
	p := new(Position_Type)
	*p = x
	return p
}

func (x Position_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Position_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_edge_data_position_proto_enumTypes[0].Descriptor()
}

func (Position_Type) Type() protoreflect.EnumType {
	return &file_protos_edge_data_position_proto_enumTypes[0]
}

func (x Position_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Position_Type.Descriptor instead.
func (Position_Type) EnumDescriptor() ([]byte, []int) {
	return file_protos_edge_data_position_proto_rawDescGZIP(), []int{0, 0}
}

// Reason describes the originator of the position
type Position_Reason int32

const (
	Position_Client   Position_Reason = 0 // The position was opened as a result of activation of an order placed from a desktop terminal
	Position_Mobile   Position_Reason = 1 // The position was opened as a result of activation of an order placed from a mobile application
	Position_Web      Position_Reason = 2 // The position was opened as a result of activation of an order placed from the web platform
	Position_Strategy Position_Reason = 3 // The position was opened as a result of activation of an order placed from a strategy, i.e. an Expert Advisor or a script
)

// Enum value maps for Position_Reason.
var (
	Position_Reason_name = map[int32]string{
		0: "Client",
		1: "Mobile",
		2: "Web",
		3: "Strategy",
	}
	Position_Reason_value = map[string]int32{
		"Client":   0,
		"Mobile":   1,
		"Web":      2,
		"Strategy": 3,
	}
)

func (x Position_Reason) Enum() *Position_Reason {
	p := new(Position_Reason)
	*p = x
	return p
}

func (x Position_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Position_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_edge_data_position_proto_enumTypes[1].Descriptor()
}

func (Position_Reason) Type() protoreflect.EnumType {
	return &file_protos_edge_data_position_proto_enumTypes[1]
}

func (x Position_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Position_Reason.Descriptor instead.
func (Position_Reason) EnumDescriptor() ([]byte, []int) {
	return file_protos_edge_data_position_proto_rawDescGZIP(), []int{0, 1}
}

// Position describes the act of holding some security and the cumulative affects of this. It is created when an order is
// accepted from a trade request. The position may be modified by additional orders, modifications to the original order,
// and eventually closed by an order.
type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // Position ID. Unique number assigned to each newly opened position. It usually matches the ID of the order used to open the position except when the ID is changed as a result of service
	// operations on the server, for example, when charging swaps with position re-opening. This value corresponds to Trade.position.
	Symbol     string              `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`                                   // Symbol of the position
	ExternalId string              `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`         // Position identifier in an external trading system (on the Exchange)
	Volume     *gopb.Decimal       `protobuf:"bytes,4,opt,name=volume,proto3" json:"volume,omitempty"`                                   // Position volume
	OpenPrice  *gopb.Decimal       `protobuf:"bytes,5,opt,name=open_price,json=openPrice,proto3" json:"open_price,omitempty"`            // Position open price
	StopLoss   *gopb.Decimal       `protobuf:"bytes,6,opt,name=stop_loss,json=stopLoss,proto3" json:"stop_loss,omitempty"`               // Stop Loss level of opened position
	TakeProfit *gopb.Decimal       `protobuf:"bytes,7,opt,name=take_profit,json=takeProfit,proto3" json:"take_profit,omitempty"`         // Take Profit level of opened position
	Swap       *gopb.Decimal       `protobuf:"bytes,8,opt,name=swap,proto3" json:"swap,omitempty"`                                       // Cumulative swap
	Profit     *gopb.Decimal       `protobuf:"bytes,9,opt,name=profit,proto3" json:"profit,omitempty"`                                   // Current profit
	OpenTime   *gopb.UnixTimestamp `protobuf:"bytes,10,opt,name=open_time,json=openTime,proto3" json:"open_time,omitempty"`              // Position open time
	UpdateTime *gopb.UnixTimestamp `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`        // Position changing time
	Type       Position_Type       `protobuf:"varint,12,opt,name=type,proto3,enum=protos.edge.data.Position_Type" json:"type,omitempty"` // Position type
	Open       bool                `protobuf:"varint,13,opt,name=open,proto3" json:"open,omitempty"`                                     // True if the position is open, false if it is closed
	Identifier uint64              `protobuf:"varint,14,opt,name=identifier,proto3" json:"identifier,omitempty"`                         // Position identifier is a unique number assigned to each re-opened position. It does not change throughout its life cycle and corresponds to the ID of an order used to open a position.
	// Position identifier is specified in each order (position_id) and deal (position_id) used to open, modify, or close it. Use this property to search for orders and deals related to the position.
	// When reversing a position in netting mode (using a single in/out trade), identifier does not change. However, ID is replaced with the ID of the order that led to the reversal.
	// Position reversal is not provided in hedging mode.
	DealIds     []string        `protobuf:"bytes,15,rep,name=deal_ids,json=dealIds,proto3" json:"deal_ids,omitempty"`                                 // The IDs of all deals associated with this position
	Origination Position_Reason `protobuf:"varint,16,opt,name=origination,proto3,enum=protos.edge.data.Position_Reason" json:"origination,omitempty"` // The reason for opening a position
	Comment     string          `protobuf:"bytes,17,opt,name=comment,proto3" json:"comment,omitempty"`                                                // Position comment
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_edge_data_position_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_protos_edge_data_position_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_protos_edge_data_position_proto_rawDescGZIP(), []int{0}
}

func (x *Position) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Position) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Position) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *Position) GetVolume() *gopb.Decimal {
	if x != nil {
		return x.Volume
	}
	return nil
}

func (x *Position) GetOpenPrice() *gopb.Decimal {
	if x != nil {
		return x.OpenPrice
	}
	return nil
}

func (x *Position) GetStopLoss() *gopb.Decimal {
	if x != nil {
		return x.StopLoss
	}
	return nil
}

func (x *Position) GetTakeProfit() *gopb.Decimal {
	if x != nil {
		return x.TakeProfit
	}
	return nil
}

func (x *Position) GetSwap() *gopb.Decimal {
	if x != nil {
		return x.Swap
	}
	return nil
}

func (x *Position) GetProfit() *gopb.Decimal {
	if x != nil {
		return x.Profit
	}
	return nil
}

func (x *Position) GetOpenTime() *gopb.UnixTimestamp {
	if x != nil {
		return x.OpenTime
	}
	return nil
}

func (x *Position) GetUpdateTime() *gopb.UnixTimestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Position) GetType() Position_Type {
	if x != nil {
		return x.Type
	}
	return Position_Buy
}

func (x *Position) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *Position) GetIdentifier() uint64 {
	if x != nil {
		return x.Identifier
	}
	return 0
}

func (x *Position) GetDealIds() []string {
	if x != nil {
		return x.DealIds
	}
	return nil
}

func (x *Position) GetOrigination() Position_Reason {
	if x != nil {
		return x.Origination
	}
	return Position_Client
}

func (x *Position) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

var File_protos_edge_data_position_proto protoreflect.FileDescriptor

var file_protos_edge_data_position_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x2f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x06, 0x0a, 0x08, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x2e, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x12, 0x35, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x09, 0x6f, 0x70,
	0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f,
	0x6c, 0x6f, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x4c, 0x6f, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x0b,
	0x74, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x0a, 0x74, 0x61, 0x6b, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x73, 0x77, 0x61, 0x70, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x04, 0x73, 0x77, 0x61,
	0x70, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x12, 0x39, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x55, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x6f, 0x70, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x73, 0x12,
	0x43, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x19,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x75, 0x79, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x53, 0x65, 0x6c, 0x6c, 0x10, 0x01, 0x22, 0x37, 0x0a, 0x06, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x57,
	0x65, 0x62, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x10, 0x03, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x78, 0x65, 0x66, 0x69, 0x6e, 0x6f, 0x2f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x2d,
	0x63, 0x6c, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_protos_edge_data_position_proto_rawDescOnce sync.Once
	file_protos_edge_data_position_proto_rawDescData = file_protos_edge_data_position_proto_rawDesc
)

func file_protos_edge_data_position_proto_rawDescGZIP() []byte {
	file_protos_edge_data_position_proto_rawDescOnce.Do(func() {
		file_protos_edge_data_position_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_edge_data_position_proto_rawDescData)
	})
	return file_protos_edge_data_position_proto_rawDescData
}

var file_protos_edge_data_position_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_protos_edge_data_position_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_protos_edge_data_position_proto_goTypes = []interface{}{
	(Position_Type)(0),         // 0: protos.edge.data.Position.Type
	(Position_Reason)(0),       // 1: protos.edge.data.Position.Reason
	(*Position)(nil),           // 2: protos.edge.data.Position
	(*gopb.Decimal)(nil),       // 3: protos.common.Decimal
	(*gopb.UnixTimestamp)(nil), // 4: protos.common.UnixTimestamp
}
var file_protos_edge_data_position_proto_depIdxs = []int32{
	3,  // 0: protos.edge.data.Position.volume:type_name -> protos.common.Decimal
	3,  // 1: protos.edge.data.Position.open_price:type_name -> protos.common.Decimal
	3,  // 2: protos.edge.data.Position.stop_loss:type_name -> protos.common.Decimal
	3,  // 3: protos.edge.data.Position.take_profit:type_name -> protos.common.Decimal
	3,  // 4: protos.edge.data.Position.swap:type_name -> protos.common.Decimal
	3,  // 5: protos.edge.data.Position.profit:type_name -> protos.common.Decimal
	4,  // 6: protos.edge.data.Position.open_time:type_name -> protos.common.UnixTimestamp
	4,  // 7: protos.edge.data.Position.update_time:type_name -> protos.common.UnixTimestamp
	0,  // 8: protos.edge.data.Position.type:type_name -> protos.edge.data.Position.Type
	1,  // 9: protos.edge.data.Position.origination:type_name -> protos.edge.data.Position.Reason
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_protos_edge_data_position_proto_init() }
func file_protos_edge_data_position_proto_init() {
	if File_protos_edge_data_position_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_edge_data_position_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_edge_data_position_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_edge_data_position_proto_goTypes,
		DependencyIndexes: file_protos_edge_data_position_proto_depIdxs,
		EnumInfos:         file_protos_edge_data_position_proto_enumTypes,
		MessageInfos:      file_protos_edge_data_position_proto_msgTypes,
	}.Build()
	File_protos_edge_data_position_proto = out.File
	file_protos_edge_data_position_proto_rawDesc = nil
	file_protos_edge_data_position_proto_goTypes = nil
	file_protos_edge_data_position_proto_depIdxs = nil
}
